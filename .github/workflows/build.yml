name: Build

on: 
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build Swift Package with Objective-C Wrapper
    strategy:
      matrix:
        os: ["macos-latest"]
        swift: ["5.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full history

      - name: List Repository Files
        run: ls -R  # Lists all files and directories to confirm the project's presence

      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift }}
      
      - name: Get Swift version
        run: swift --version

      - name: Clean Build Directory
        run: rm -rf .build

      - name: Build for iOS Device (arm64)
        run: |
          xcodebuild archive \
            -scheme TUSKit \
            -archivePath output/TUSKit-iphoneos.xcarchive \
            -sdk iphoneos \
            -destination "generic/platform=iOS" \
            -configuration Release \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES

      - name: Build for iOS Simulator (x86_64)
        run: |
          xcodebuild archive \
            -scheme TUSKit \
            -archivePath output/TUSKit-iphonesimulator.xcarchive \
            -sdk iphonesimulator \
            -destination "generic/platform=iOS Simulator" \
            -configuration Release \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES

      - name: Create XCFramework
        run: |
          xcodebuild -create-xcframework \
            -framework output/TUSKit-iphoneos.xcarchive/Products/Library/Frameworks/TUSKit.framework \
            -framework output/TUSKit-iphonesimulator.xcarchive/Products/Library/Frameworks/TUSKit.framework \
            -output output/TUSKit.xcframework

      - name: Upload XCFramework as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TUSKit_XCFramework
          path: output/TUSKit.xcframework
