name: Build

on: 
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build Swift Package with Objective-C Wrapper
    strategy:
      matrix:
        os: ["macos-latest"]
        swift: ["5.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch the full history

      - name: List Repository Files
        run: ls -R  # Lists all files and directories to confirm the project's presence

      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift }}
      
      - name: Get Swift version
        run: swift --version

      - name: Build Swift Package for iOS Device (arm64)
        run: |
          xcodebuild build \
            -scheme TUSKit \
            -destination "platform=iOS,name=iPhone 14,OS=latest" \
            -configuration Release

      - name: Build Swift Package for iOS Simulator (x86_64)
        run: |
          xcodebuild build \
            -scheme TUSKit \
            -destination "platform=iOS Simulator,name=iPhone 14,OS=latest" \
            -configuration Release

      - name: Create Objective-C Wrapper
        run: |
          mkdir -p Wrapper
          cat <<EOF > Wrapper/TUSKitWrapper.h
          #import <Foundation/Foundation.h>

          @interface TUSKitWrapper : NSObject
          - (NSString *)exampleFunction;
          @end
          EOF

          cat <<EOF > Wrapper/TUSKitWrapper.m
          #import "TUSKitWrapper.h"
          @import TUSKit;  // Import TUSKit module

          @implementation TUSKitWrapper

          - (NSString *)exampleFunction {
              // Example Swift function wrapped in Objective-C
              return [TUSKit someSwiftFunction];  // Replace with actual Swift call
          }

          @end
          EOF

      - name: Build Objective-C Wrapper as XCFramework
        run: |
          xcodebuild archive \
            -scheme TUSKit \
            -archivePath output/TUSKit-iphoneos.xcarchive \
            -sdk iphoneos \
            -destination "platform=iOS,name=iPhone 14,OS=latest" \
            -configuration Release \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES

          xcodebuild archive \
            -scheme TUSKit \
            -archivePath output/TUSKit-iphonesimulator.xcarchive \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,name=iPhone 14,OS=latest" \
            -configuration Release \
            BUILD_LIBRARY_FOR_DISTRIBUTION=YES

          xcodebuild -create-xcframework \
            -framework output/TUSKit-iphoneos.xcarchive/Products/Library/Frameworks/TUSKit.framework \
            -framework output/TUSKit-iphonesimulator.xcarchive/Products/Library/Frameworks/TUSKit.framework \
            -output output/TUSKit.xcframework

      - name: Upload XCFramework as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TUSKit_XCFramework
          path: output/TUSKit.xcframework
